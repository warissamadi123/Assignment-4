/*
Name: Waris Samadi
File: main.js
Date: 2025-04-02
JavaScript for Bouncing Balls
*/

const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');

// Set canvas dimensions
canvas.width = window.innerWidth - 40;
canvas.height = window.innerHeight - 100;

// Ball class
class Ball {
    constructor(x, y, velX, velY, size, color) {
        this.x = x;
        this.y = y;
        this.velX = velX;
        this.velY = velY;
        this.size = size;
        this.color = color;
    }

    draw() {
        ctx.beginPath();
        ctx.fillStyle = this.color;
        ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);
        ctx.fill();
    }

    update() {
        if (this.x + this.size >= canvas.width || this.x - this.size <= 0) {
            this.velX = -this.velX;
        }
        if (this.y + this.size >= canvas.height || this.y - this.size <= 0) {
            this.velY = -this.velY;
        }

        this.x += this.velX;
        this.y += this.velY;
    }
}

// Array to hold all balls
const balls = [];

function loop() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    for (let i = 0; i < balls.length; i++) {
        balls[i].draw();
        balls[i].update();
    }

    requestAnimationFrame(loop);
}

// Create initial balls
for (let i = 0; i < 5; i++) {
    const size = Math.random() * 30 + 10;
    const ball = new Ball(
        Math.random() * canvas.width,
        Math.random() * canvas.height,
        Math.random() * 6 - 3,
        Math.random() * 6 - 3,
        size,
        `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`
    );
    balls.push(ball);
}

// Add a new ball on click
canvas.addEventListener('click', (event) => {
    const size = Math.random() * 30 + 10;
    const ball = new Ball(
        event.clientX,
        event.clientY,
        Math.random() * 6 - 3,
        Math.random() * 6 - 3,
        size,
        `rgb(${Math.random() * 255}, ${Math.random() * 255}, ${Math.random() * 255})`
    );
    balls.push(ball);
});

loop();
